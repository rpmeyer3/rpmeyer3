_> CSCI 2670 - Classwork 11
__ <!> Instructions
|> Create a \graf document with your answers to the following problems.  Save your work as a Grafstate file with the extension **{.graf.txt} and upload it to eLC.
|> You may work in small groups.  You must identify your group on eLC.
|> Only one student in the group should do the eLC  submission.
|> Look at your file when you save it and *{before} submitting it to eLC to make sure it is what you intend to submit.  Check eLC *{after} submitting your file to make sure the correct file was uploaded.  It is your responsibility to submit the correct file.
|> The last version of your answer file that you submit before the deadline is the one that will be graded. If you submit the wrong file and submit a replacement after the deadline, then the usual late policy will apply.
|>  All Grafstate files should compile when the TA loads them into the Grafstate Shell. A file that does not compile will not be graded.
@{*}All TMs must be deterministic.
\;
Group members:
1.)_____________________
2.)_____________________
3.)_____________________
4.)_____________________
5.)_____________________
\;
@{*} Refer to Grafstate Margin Notes Section 3.5 and 3.6 for descriptions and examples on enumerators and computable functions.

@{*} To receive full credit, you must comment your transitions.
\;

(1) Create a Turing machine to compute the @fn
>< f(n)=n+1,
> where n is a binary number.
//
(2) Create a mapping Turing machine to compute the @fn
>< f(n)=2n,
> where n is a binary number.
//
(3) Write the \graf code for a Turing machine that enumerates the @lang L={a^nb^{2n}|n\ge0}.
//
(4) Write the \graf code for a Turing machine that enumerates the @lang described by the @regex (ab)*