_> CSCI 2670 - Classwork 10
__ <!> Instructions
|> Create a \graf document with your answers to the following problems.  Save your work as a Grafstate file with the extension **{.graf.txt} and upload it to eLC.
|> You may work in small groups.  You must identify your group on eLC.
|> Only one student in the group should do the eLC  submission.
|> Look at your file when you save it and *{before} submitting it to eLC to make sure it is what you intend to submit.  Check eLC *{after} submitting your file to make sure the correct file was uploaded.  It is your responsibility to submit the correct file.
|> The last version of your answer file that you submit before the deadline is the one that will be graded. If you submit the wrong file and submit a replacement after the deadline, then the usual late policy will apply.
|>  All computational structures (i.e., automata and grammars) should be coded using Grafstate \[:+] syntax. Working automata code should produce a state diagram.
|>  All Grafstate files should compile when the TA loads them into the Grafstate Shell. A file that does not compile will not be graded.
\;
Group members:
1.)_____________________
2.)_____________________
3.)_____________________
4.)_____________________
5.)_____________________
\;

//
(*) A Turing machine M !{decides} a @lang L if
>> [1] M ACCEPTS *{every} string w\inL, and
>> [2] M REJECTS *{every} string w\in~L.
//
[nb] Recall that ~L=\S*-L.
//
(1) Create a single tape Turing machine M_1 to decides the @lang of binary strings that contain at least 2 consecutive *{1}s !{and} an even number of \[1]s.
\;

(2) Create a single tape Turing machine M_2 to decides the @lang of binary strings that contain at least 2 consecutive *{1}s !{or} an even number of \[1]s.
\;

(3) Create a multitape Turing Machine M_3  decides the language {a^ib^j | i != j}
\;

@{*} To receive full credit, you must include all q_r (rejecting) logic (by explicitly including all transitions that lead to q_r) and you must comment your transitions.


